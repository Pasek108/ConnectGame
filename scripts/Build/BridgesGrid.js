"use strict";class BridgesGrid{constructor(t,s,i){this.unlockNextLevel=i,this.height=s.length,this.width=s[0].length,this.level=GlobalUtils.copyArray(s),this.container=document.querySelector(".grid"),this.container.innerHTML="",this.setGridSize(t),this.createTiles(),this.createIslands();for(let t=0;t<this.height;t++)for(let s=0;s<this.width;s++){if(null==this.islands[t][s])continue;const i=BridgesUtils.getAdjacentIslands(this.islands,t,s);this.islands[t][s].addAdjacentIslands(i,((t,s)=>this.startBridge(t,s)))}window.addEventListener("mousemove",this.setClosestBridge.bind(this)),window.addEventListener("touchmove",this.setClosestBridge.bind(this)),window.addEventListener("mouseup",this.addBridge.bind(this)),window.addEventListener("touchend",this.addBridge.bind(this))}setGridSize(t){if(this.container.className=`grid bridges size-${t}`,this.container.style.width=(this.width-1)*t+3+"rem",this.container.style.height=(this.height-1)*t+3+"rem",this.container.style.gridTemplateColumns=`repeat(${this.width}, ${t}rem)`,this.container.style.gridTemplateRows=`repeat(${this.height}, ${t}rem)`,null!=this.islands)for(let t=0;t<this.height;t++)for(let s=0;s<this.width;s++){if(null==this.islands[t][s])continue;const i=BridgesUtils.getAdjacentIslands(this.islands,t,s);this.startBridge(this.islands[t][s],i)}}createTiles(){this.tiles=[];for(let t=0;t<this.height;t++){this.tiles.push([]);for(let s=0;s<this.width;s++){const i=GlobalUtils.createNewDOM("div","tile");this.container.appendChild(i),s===this.width-1&&(i.style.width="0px"),t===this.height-1&&(i.style.height="0px"),this.tiles[t].push(i)}}}createIslands(){this.islands=[];for(let t=0;t<this.height;t++){this.islands.push([]);for(let s=0;s<this.width;s++)this.level[t][s]?(this.islands[t].push(new BridgesIsland(this.level[t][s])),this.tiles[t][s].appendChild(this.islands[t][s].container)):this.islands[t].push(null)}}startBridge(t,s){this.mouse_down=!0,this.current_island=t,this.current_adjacent_islands=s,this.target_island=t,BridgesUtils.setAdjacentBridgesSizes(this.current_island,this.current_adjacent_islands)}setClosestBridge(t){if(!this.mouse_down)return;const s=t.changedTouches;let i=[0,0];i=null==s?[t.pageY,t.pageX]:[s[0].pageY,s[0].pageX],this.target_island=BridgesUtils.getClosestIslandAndFocusBridge(this.islands,this.current_island,this.current_adjacent_islands,i)}addBridge(){this.mouse_down&&(this.mouse_down=!1,this.target_island!=this.current_island&&null!=this.target_island&&(BridgesUtils.addBridgeBetweenIslands(this.current_island,this.target_island),this.target_island=null,this.checkIfWin()))}checkIfWin(){let t=!0;for(let s=0;s<this.height;s++){for(let i=0;i<this.width;i++)if(null!=this.islands[s][i]&&!this.islands[s][i].correct){t=!1;break}if(!t)break}t&&this.win()}win(){for(let t=0;t<this.height;t++)for(let s=0;s<this.width;s++)null!=this.islands[t][s]&&this.islands[t][s].blockActions();this.unlockNextLevel()}}