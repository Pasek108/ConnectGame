"use strict";class BridgesIsland{constructor(t,i,e){this.container=GlobalUtils.createNewDOM("div","island"),this.island=GlobalUtils.createNewDOM("span","",`${t}`),this.container.appendChild(this.island),this.top_bridge=GlobalUtils.createNewDOM("div","top-bridge"),this.container.appendChild(this.top_bridge),this.left_bridge=GlobalUtils.createNewDOM("div","left-bridge"),this.container.appendChild(this.left_bridge),this.adjacent_islands=[null,null,null,null],this.connections=[0,0,0,0],this.value=t,this.correct=!1,this.is_editor=!1,this.active=!0,this.just_activated=!1,0===t&&(this.editor_onclick=i,this.editor_value_change=e,this.deactivate(),this.island.addEventListener("contextmenu",(t=>{t.preventDefault(),this.active?this.deactivate():this.activate(),this.editor_onclick()})))}getPosition(){return this.container.getBoundingClientRect()}addAdjacentIslands(t,i){this.startBridge=i,this.adjacent_islands=t,this.blockActions(),this.bridgeStart=this.onMouseDown.bind(this),this.container.addEventListener("mousedown",this.bridgeStart),this.container.addEventListener("touchstart",this.bridgeStart)}onMouseDown(){this.startBridge(this,this.adjacent_islands)}blockActions(){this.container.removeEventListener("mousedown",this.bridgeStart),this.container.removeEventListener("touchstart",this.bridgeStart)}checkConnections(){const t=this.connections.reduce(((t,i)=>t+i));t===this.value?(this.container.classList.remove("wrong"),this.container.classList.add("correct"),this.correct=!0):t>this.value?(this.container.classList.remove("correct"),this.container.classList.add("wrong"),this.correct=!1):(this.container.classList.remove("wrong"),this.container.classList.remove("correct"),this.correct=!1)}changeConnection(t){this.connections[t]=(this.connections[t]+1)%3,this.is_editor?this.updateValue():this.checkConnections()}addBridgeTop(){this.changeConnection(0);const t=GlobalUtils.createNewDOM("div",`bridge vertical type${this.connections[0]}`);this.top_bridge.innerHTML="",this.top_bridge.appendChild(t),this.unfocusTop()}addBridgeLeft(){this.changeConnection(3);const t=GlobalUtils.createNewDOM("div",`bridge horizontal type${this.connections[3]}`);this.left_bridge.innerHTML="",this.left_bridge.appendChild(t),this.unfocusLeft()}setTopBridgeSize(t){this.top_bridge.style.height=this.getPosition().top-t.top+"px"}setLeftBridgeSize(t){this.left_bridge.style.width=this.getPosition().left-t.left+"px"}focusTop(){this.left_bridge.classList.remove("focus"),this.top_bridge.classList.add("focus")}unfocusTop(){this.top_bridge.classList.remove("focus")}focusLeft(){this.top_bridge.classList.remove("focus"),this.left_bridge.classList.add("focus")}unfocusLeft(){this.left_bridge.classList.remove("focus")}resetAdjacentConnections(){this.just_activated=!1;for(let t=0;t<4;t++)if(null!=this.adjacent_islands[t])switch(this.adjacent_islands[t].connections[(t+2)%4]=0,this.adjacent_islands[t].updateValue(),t){case 0:this.top_bridge.innerHTML="";break;case 1:this.adjacent_islands[t].left_bridge.innerHTML="";break;case 2:this.adjacent_islands[t].top_bridge.innerHTML="";break;case 3:this.left_bridge.innerHTML=""}}updateValue(){this.value=this.connections.reduce(((t,i)=>t+i)),this.island.innerText=this.value,this.editor_value_change(this.value)}activate(){this.active=!0,this.container.classList.remove("disabled"),this.just_activated=!0}deactivate(){this.active=!1,this.container.classList.add("disabled"),this.correct=!1,this.is_editor=!0,this.connections=[0,0,0,0],this.value=0,this.container.querySelector("span").innerText=this.value,this.resetAdjacentConnections(),this.adjacent_islands=[null,null,null,null],this.startBridge=()=>{}}}